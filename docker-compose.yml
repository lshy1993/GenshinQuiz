services:
  swagger-editor:
    image: swaggerapi/swagger-editor
    platform: linux/amd64
    ports:
      - "3020:8080"
    volumes:
      - ./backend/openapi:/mnt/swagger

  frontend:
    container_name: frontend
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - ./backend/openapi:/app/openapi # 挂载 openapi 文件夹
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend
    command: /bin/sh -c "bunx orval --config orval.config.json && bun run dev" # 运行 Orval 生成代码然后启动 Bun 开发服务器

  backend:
    container_name: server
    build:
      context: ./backend
    ports:
      - "3082:3082"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - database
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=database
      - DB_PORT=5432
      - DB_NAME=genshinquiz
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:3082/" ]
      interval: 30s
      retries: 3
      timeout: 10s
      start_period: 5s
    command: /bin/sh -c "npm install && npm run db:migrate && node index.js"

  database:
    container_name: postgres
    image: postgres:16
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: genshinquiz
    # healthcheck:
    #   test: ["CMD", "pg_isready", "-U", "postgres", "-d", "genshinquiz", "-h", "localhost", "-p", "5432"]
    #   interval: 30s
    #   retries: 5
    #   timeout: 5s
    #   start_period: 10s

volumes:
  db_data:

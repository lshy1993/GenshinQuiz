/**
 * Generated by orval v7.3.0 🍺
 * Do not edit manually.
 * GenshinQuiz API
 * API for Quiz system
 * OpenAPI spec version: 1.0.0
 */
import * as axios from 'axios';
import type {
  AxiosRequestConfig,
  AxiosResponse
} from 'axios'
export type GetQuizQuizid200 = {
  quiz?: Quiz;
};

export type GetQuizs200 = {
  count: number;
  quizzes: Quiz[];
};

export type GetQuizsParams = {
/**
 * pagination
 */
page?: number;
/**
 * tags
 */
tags?: string;
/**
 * authors
 */
authors?: string;
};

export type GetRandomQuiz200 = {
  quiz?: Quiz;
};

export type GreetUser200 = {
  message?: string;
};

export type UnauthorizedResponse = {
  error?: string;
};

export type BadRequestResponse = {
  error?: string;
};

export interface Quiz {
  answer: string[];
  creatAt: string;
  creator: string;
  id: string;
  multiple?: boolean;
  options: string[];
  quiz: string;
  updateAt: string;
}





  export const getGenshinQuizAPI = () => {
/**
 * Returns a greeting message
 * @summary Greet the user
 */
const greetUser = <TData = AxiosResponse<GreetUser200>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `/greet`,options
    );
  }

/**
 * get one random quiz
 * @summary GET random quiz
 */
const getRandomQuiz = <TData = AxiosResponse<GetRandomQuiz200>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `/random`,options
    );
  }

/**
 * list all quizzes
 * @summary GET all quizzes
 */
const getQuizs = <TData = AxiosResponse<GetQuizs200>>(
    params?: GetQuizsParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `/quizzes`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

/**
 * get quiz by id
 * @summary GET a detail quiz info by id
 */
const getQuizQuizid = <TData = AxiosResponse<GetQuizQuizid200>>(
    quizid: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `/quiz/${quizid}/`,options
    );
  }

return {greetUser,getRandomQuiz,getQuizs,getQuizQuizid}};
export type GreetUserResult = AxiosResponse<GreetUser200>
export type GetRandomQuizResult = AxiosResponse<GetRandomQuiz200>
export type GetQuizsResult = AxiosResponse<GetQuizs200>
export type GetQuizQuizidResult = AxiosResponse<GetQuizQuizid200>
